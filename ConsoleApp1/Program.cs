using ConsoleApp1.Context;
using System;
using System.IO;

namespace ConsoleApp1
{
    public class Program
    {
         static void Main(string[] args)
        {
           using(var c = new Library())
            {
                string path1 = Directory.GetCurrentDirectory();
                var n = path1.IndexOf("\\ConsoleApp1\\bin\\Debug\\netcoreapp3.1");
                string dir = path1.Substring(0, n);

                Byte[] bytes = File.ReadAllBytes(string.Format("{0}\\kernighan-and-ritchie.pdf",dir));
                String file = Convert.ToBase64String(bytes);
                Byte[] bytesP = File.ReadAllBytes(string.Format("{0}\\books\\portada.png",dir));
                Byte[] bytesP2 = File.ReadAllBytes(string.Format("{0}\\books\\portada2.jpg", dir));
                Byte[] bytesP3 = File.ReadAllBytes(string.Format("{0}\\books\\portada3.jpg", dir));
                Byte[] bytesP4 = File.ReadAllBytes(string.Format("{0}\\books\\portada4.png", dir));
                Byte[] bytesP5 = File.ReadAllBytes(string.Format("{0}\\books\\portada5.jpg", dir));
                Byte[] bytesP6 = File.ReadAllBytes(string.Format("{0}\\books\\portada6.jpg", dir));
                Byte[] bytesP7 = File.ReadAllBytes(string.Format("{0}\\books\\portada7.jpg", dir));
                Byte[] bytesP8 = File.ReadAllBytes(string.Format("{0}\\books\\portada8.jpg", dir));
                Byte[] bytesP9 = File.ReadAllBytes(string.Format("{0}\\books\\portada9.jpg", dir));
                Byte[] bytesP10 = File.ReadAllBytes(string.Format("{0}\\books\\portada10.jpg", dir));
                Byte[] bytesP11 = File.ReadAllBytes(string.Format("{0}\\books\\portada11.jpg", dir));
                Byte[] bytesP12 = File.ReadAllBytes(string.Format("{0}\\books\\portada12.jpg", dir));
                Byte[] bytesP13 = File.ReadAllBytes(string.Format("{0}\\books\\portada13.jpg", dir));
                Byte[] bytesP14 = File.ReadAllBytes(string.Format("{0}\\books\\portada14.jpg", dir));
                Byte[] bytesP15 = File.ReadAllBytes(string.Format("{0}\\books\\portada15.jpg", dir));
                Byte[] bytesP16 = File.ReadAllBytes(string.Format("{0}\\books\\portada16.jpg", dir));
                Byte[] bytesP17 = File.ReadAllBytes(string.Format("{0}\\books\\portada17.jpg", dir));
                Byte[] bytesP18 = File.ReadAllBytes(string.Format("{0}\\books\\portada18.jpg", dir));
                Byte[] bytesP19 = File.ReadAllBytes(string.Format("{0}\\books\\portada19.jpg", dir));
                Byte[] bytesP20 = File.ReadAllBytes(string.Format("{0}\\books\\portada20.jpg", dir));
                Byte[] bytesP21 = File.ReadAllBytes(string.Format("{0}\\books\\portada21.jpg", dir));
                Byte[] bytesP22 = File.ReadAllBytes(string.Format("{0}\\books\\portada22.jpg", dir));
                Byte[] bytesP23 = File.ReadAllBytes(string.Format("{0}\\books\\portada23.jpg", dir));
                Byte[] bytesP24 = File.ReadAllBytes(string.Format("{0}\\books\\portada24.jpg", dir));
                Byte[] bytesP25 = File.ReadAllBytes(string.Format("{0}\\books\\portada25.jpg", dir));
                Byte[] bytesP26 = File.ReadAllBytes(string.Format("{0}\\books\\portada26.jpg", dir));
                
                //c.MaterialEstudio.Add(new Entities.MaterialEstudio {Titulo = "Fundamentos de programación",  Descripcion = "descripcion 1",Prologo ="prologo1", Autor="autor 1", IdIdioma=1,IdUsuario=3, IdMateria=1,IdUniversidad=1,Archivo =bytes, Miniatura=bytesP });
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo= "PDF", Titulo = "El lenguaje de programación", Descripcion = "Este es uno de los primeros libros que debemos leer (probablemente incluso más de una vez) para poder empezar a ser buenos programadores", Prologo = "Este es uno de los requisitos más solicitados por las empresas a la hora de optar a un puesto de trabajo. Clean Code, o código limpio, es un libro que nos enseña la filosofía del buen programador. Un libro con todo tipo de técnicas para facilitar y optimizar tanto la lectura como la escritura de código. Un código limpio ayuda a ahorrar mucho tiempo en la labor de depuración, solución de errores y mejoras del programa. Este libro, de Anaya, nos enseña todas las posibilidades que nos ofrece este lenguaje de programación. Con él podremos empezar a programar prácticamente desde cero, y seguir ampliando nuestros conocimientos dominando las librerías y bibliotecas, así como sus funciones más avanzadas. Una guía tanto para iniciados como para expertos.", Autor = "Kernighan R.", IdIdioma = 1, IdUsuario = 16, IdMateria = 1, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP });

                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF", Titulo = "Arquitectura de computadoras", Descripcion = "El presente manual está destinado a personas con conocimientos básicos sobre computadoras", Prologo = "La arquitectura de computadoras es el diseño conceptual y la estructura operacional fundamental de un sistema de computadoras.1​Es decir, es un modelo y una descripción funcional de los requerimientos y las implementaciones de diseño para varias partes de una computadora, con especial interés en la forma en que la unidad central de proceso (CPU) trabaja internamente y accede a las direcciones de memoria. También la arquitectura del computador está basado en tres grandes principios que se aplican a todo dispositivo o componente del computador, estos tres principios son: velocidad, capacidad y tipo de conexión.También suele definirse como la forma de interconectar componentes de hardware, para crear computadoras según los requerimientos de funcionalidad, rendimiento y costo. La computadora recibe y envía la información a través de los periféricos, por medio de los canales. La CPU es la encargada de procesar la información que le llega a la computadora. El intercambio de información se tiene que hacer con los periféricos y la CPU. Puede considerarse que todas aquellas unidades de un sistema, exceptuando la CPU, se denomina periférico, por lo que la computadora tiene dos partes bien definidas.", Autor = "Behrooz Parmani", IdIdioma = 1, IdUsuario = 16, IdMateria = 3, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP2 });

                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Matematica básica", Descripcion = "El libro Introducción a la Matemática hace parte de un curso de ingreso a las universidades argentinas.", Prologo = "ELas matemáticas o la matemática2​ (del latín mathematĭca, y este del griego μαθηματικά, transliterado como mathēmatiká, derivado de μάθημα, tr. máthēma. 'conocimiento') es/son una ciencia formal que, partiendo de axiomas y siguiendo el razonamiento lógico, estudia/n las propiedades, estructuras abstractas y relaciones entre entidades abstractas como números, figuras geométricas, iconos, glifos o símbolos en general.La matemática es un conjunto de lenguajes formales que pueden usarse como herramienta para plantear problemas en contextos específicos. Por ejemplo, el siguiente enunciado puede expresarse de dos formas: X es mayor que Y y Y es mayor que Z, o en forma simplificada puede decirse que X > Y > Z. Este es el motivo por el cual las matemáticas son tan solo un lenguaje simplificado con una herramienta para cada problema específico (por ejemplo, 2 x 2 = 4 o bien 2 + 2 = 4).", Autor = "Camila Cortes", IdIdioma = 1, IdUsuario = 17, IdMateria = 2, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP3 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Manual de pensamiento científico", Descripcion = "Es un primer acercamiento a cuestiones, términos y debates que los estudiantes van a tratar en profundidad en otras asignaturas", Prologo = "El pensamiento científico es un modo de razonamiento inaugurado por la aparición de las ciencias modernas. Se basa en el escepticismo, la observación y la experimentación, es decir, en la comprobación demostrable de las interpretaciones que hacemos del mundo y de las leyes que lo rigen. Entre las principales características del pensamiento científico se encuentran la objetividad (se toman los hechos tal y como se presentan en la realidad), la racionalidad (parte de principios y leyes científicas) y la sistematicidad (el conocimiento es ordenado y jerarquizado). El sentido común, ofrece explicaciones sin demostraciones críticas que destaquen la relevancia de la explicación, para los hechos que intenta aclarar.", Autor = "Amos Granjales", IdIdioma = 1, IdUsuario = 17, IdMateria = 4, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP4 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Fundamentos de programación", Descripcion = "Un lenguaje de programación es un lenguaje que puede ser utilizado para controlar el comportamiento de una máquina, particularmente una computadora", Prologo = "Para crear un programa, y que la computadora lo interprete y ejecute, las instrucciones deben escribirse en un lenguaje de programación. En sus comienzos las computadoras interpretaban solo instrucciones en un lenguaje específico, del más bajo nivel, conocido como código máquina, siendo éste excesivamente complicado para programar. De hecho solo consiste en cadenas de números 1 y 0 (sistema binario). Para facilitar el trabajo de programación, los primeros científicos, que trabajaban en el área, decidieron reemplazar las instrucciones, secuencias de unos y ceros, por mnemónicos, que son abreviaturas en inglés de la función que cumple la instrucción; las codificaron y crearon así un lenguaje de mayor nivel, que se conoce como Assembly o lenguaje ensamblador. Por ejemplo, para sumar se podría usar la letra A de la palabra inglesa add (sumar). En realidad escribir en lenguaje ensamblador es básicamente lo mismo que hacerlo en lenguaje máquina, pero las letras y palabras son bastante más fáciles de recordar y entender que secuencias de números binarios. A medida que la complejidad de las tareas que realizaban las computadoras aumentaba, se hizo necesario disponer de un método más sencillo para programar.", Autor = "Luis Joyanes", IdIdioma = 1, IdUsuario = 16, IdMateria = 1, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP5 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Fundamentos de programación JAVA", Descripcion = "Java es un lenguaje de programación y una plataforma informática que fue comercializada por primera vez en 1995 por Sun Microsystems. ", Prologo = "Hay muchas aplicaciones y sitios web que no funcionarán, probablemente, a menos que tengan Java instalado y cada día se crean más. Java es rápido, seguro y fiable. Desde ordenadores portátiles hasta centros de datos, desde consolas para juegos hasta computadoras avanzadas, desde teléfonos móviles hasta Internet, Java está en todas partes, si es ejecutado en una plataforma no tiene que ser recompilado para correr en otra. Java es, a partir de 2012, uno de los lenguajes de programación más populares en uso, particularmente para aplicaciones de cliente-servidor de web, con unos diez millones de usuarios reportados. El lenguaje de programación Java fue desarrollado originalmente por James Gosling, de Sun Microsystems (constituida en 1983 y posteriormente adquirida el 27 de enero de 2010 por la compañía Oracle),4​ y publicado en 1995 como un componente fundamental de la plataforma Java de Sun Microsystems. Su sintaxis deriva en gran medida de C y C++, pero tiene menos utilidades de bajo nivel que cualquiera de ellos. Las aplicaciones de Java son compiladas a bytecode (clase Java), que puede ejecutarse en cualquier máquina virtual Java (JVM) sin importar la arquitectura de la computadora subyacente.", Autor = "Ricardo Billalobos", IdIdioma = 1, IdUsuario = 16, IdMateria = 1, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP6 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "El libro de la física", Descripcion = "Ciencia que estudia las propiedades de la materia y de la energía y establece las leyes que explican los fenómenos naturales ", Prologo = "La física es tal vez la más antigua de todas las disciplinas académicas, ya que la astronomía es una de sus subdisciplinas. También comenzó hace más de dos mil años con los primeros trabajos de filósofos griegos. En los últimos dos milenios, la física fue considerada parte de lo que ahora llamamos filosofía, química y ciertas ramas de la matemática y la biología, pero durante la Revolución Científica en el siglo XVII se convirtió en una ciencia moderna, única por derecho propio. Sin embargo, en algunas esferas como la física matemática y la química cuántica, los límites de la física con otras ramas de la ciencia siguen siendo difíciles de distinguir. La formulación de las teorías sobre las leyes que gobiernan el Universo ha sido un objetivo central de la física desde tiempos remotos, con la filosofía del empleo sistemático de experimentos cuantitativos de observación y prueba como fuente de verificación. La clave del desarrollo histórico de la física incluye hitos como la ley de la gravitación universal y la mecánica clásica de Newton.", Autor = "Watson Margenau", IdIdioma = 1, IdUsuario = 17, IdMateria = 5, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP7 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Chemistry", Descripcion = "Science that studies the properties of matter and energy and establishes the laws that explain natural phenomena", Prologo = "Physics is perhaps the oldest of all academic disciplines, as astronomy is one of its sub-disciplines. It also began more than two thousand years ago with the first works of Greek philosophers. In the last two millennia, physics was considered part of what we now call philosophy, chemistry, and certain branches of mathematics and biology, but during the Scientific Revolution in the 17th century it became a modern science, unique in its own right. However, in some spheres such as mathematical physics and quantum chemistry, the limits of physics with other branches of science remain difficult to distinguish. The formulation of theories about the laws that govern the Universe has been a central objective of physics since ancient times, with the philosophy of the systematic use of quantitative observation and testing experiments as a source of verification. The key to the historical development of physics includes milestones such as the law of universal gravitation and classical Newtonian mechanics.", Autor = "Watson Margenau", IdIdioma = 2, IdUsuario = 17, IdMateria = 6, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP8 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Organic Chemistry", Descripcion = "Now that science studies the properties of matter and energy and establishes the laws that explain natural phenomena", Prologo = "Physics is perhaps the oldest of all academic disciplines, as astronomy is one of its sub-disciplines. It also began more than two thousand years ago with the first works of Greek philosophers. In the last two millennia, physics was considered part of what we now call philosophy, chemistry, and certain branches of mathematics and biology, but during the Scientific Revolution in the 17th century it became a modern science, unique in its own right. However, in some spheres such as mathematical physics and quantum chemistry, the limits of physics with other branches of science remain difficult to distinguish. The formulation of theories about the laws that govern the Universe has been a central objective of physics since ancient times, with the philosophy of the systematic use of quantitative observation and testing experiments as a source of verification. The key to the historical development of physics includes milestones such as the law of universal gravitation and classical Newtonian mechanics.", Autor = " George Linconln", IdIdioma = 2, IdUsuario = 17, IdMateria = 6, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP9 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "El gran libro del cuerpo humano",  Descripcion = "Este libro da una introducción a todo lo necesario para la formación de futuros profesionales en la ciencia de la salud del cuerpo humano", Prologo = "La anatomía humana es la ciencia de carácter práctico y morfológico que se dedica principalmente al estudio de las estructuras macroscópicas del cuerpo humano.1​ Deja el estudio de los tejidos a la histología, y el de las células a la citología y a la biología celular. La anatomía humana es una ciencia especial dentro de la anatomía general animal.Biológicamente,el ser humano es un animal.Y, como los animales, el cuerpo humano se organiza, mediante una visión sistemática y a semejanza del Universo del que forma parte, en diferentes niveles de jerarquización que, enlistados en orden ascendente(de lo micro a lo macro, de lo más invisible e interno hacia lo más visible y externo), son los siguientes: se compone de moléculas, que juntas se vuelven células, y estas dependiendo de su tipo se vuelven a su vez tejidos, y estos a su vez se clasifican en órganos, para finalmente por conjuntos y función se denominen aparatos, y estos integrados formen sistemas.Otras visiones(funcional, morfogenética, clínica, etcétera), según otros criterios, estudian el cuerpo humano desde otras perspectivas, pero esta es la que suele utilizarse para comprender lo básico.", Autor = "Alice Roberts", IdIdioma = 1, IdUsuario = 18, IdMateria = 7, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP10 });
                /*nuevo*/                                           
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Patrones de diseño", Descripcion = "Los patrones de diseño son unas técnicas para resolver problemas comunes en el desarrollo de software", Prologo = "Un patrón de diseño resulta ser una solución a un problema de diseño. Para que una solución sea considerada un patrón debe poseer ciertas características. Una de ellas es que debe haber comprobado su efectividad resolviendo problemas similares en ocasiones anteriores. Otra es que debe ser reutilizable, lo que significa que es aplicable a diferentes problemas de diseño en distintas circunstancias. En 1979 el arquitecto Christopher Alexander aportó al mundo de la arquitectura el libro The Timeless Way of Building; en él proponía el aprendizaje y uso de una serie de patrones para la construcción de edificios de una mayor calidad, en la que esa mayor calidad se refería a la arquitectura antigua y la menor calidad correspondía a la arquitectura moderna", Autor = "Erich Gamma", IdIdioma = 1, IdUsuario = 16, IdMateria = 1, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP11 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Programación orientada a objetos", Descripcion = "Programación orientada a objetos usando Java", Prologo = "La Programación Orientada a Objetos (POO, en español; OOP, según sus siglas en inglés) es un paradigma de programación que viene a innovar la forma de obtener resultados. Los objetos se utilizan como metáfora para emular las entidades reales del negocio a modelar. Muchos de los objetos prediseñados de los lenguajes de programación actuales permiten la agrupación en bibliotecas o librerías, sin embargo, muchos de estos lenguajes permiten al usuario la creación de sus propias bibliotecas. Está basada en varias técnicas del sexenio: herencia, cohesión, abstracción, polimorfismo, acoplamiento y encapsulamiento. Su uso se popularizó a principios de la década de 1990. En la actualidad, existe una gran variedad de lenguajes de programación que soportan la orientación a objetos.", Autor = "Hector Florez", IdIdioma = 1, IdUsuario = 16, IdMateria = 1, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP12 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Python para todos", Descripcion = "Python es un lenguaje de programación interpretado cuya filosofía hace hincapié en la legibilidad de su código", Prologo = "Python fue creado a finales de los ochenta4​ por Guido van Rossum en el Centro para las Matemáticas y la Informática (CWI, Centrum Wiskunde & Informatica), en los Países Bajos, como un sucesor del lenguaje de programación ABC, capaz de manejar excepciones e interactuar con el sistema operativo Amoeba. El nombre del lenguaje proviene de la afición de su creador por los humoristas británicos Monty Python. Guido Van Rossum es el principal autor de Python, y su continuo rol central en decidir la dirección de Python es reconocido, refiriéndose a él como Benevolente Dictador Vitalicio (en inglés: Benevolent Dictator for Life, BDFL); sin embargo el 12 de julio de 2018 declinó de dicha situación de honor sin dejar un sucesor o sucesora y con una declaración altisonante:", Autor = "Raul González", IdIdioma = 1, IdUsuario = 16, IdMateria = 1, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP13 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Algebra", Descripcion = "La rama de la matemática que estudia la combinación de elementos de estructuras abstractas acorde a ciertas reglas", Prologo = "A diferencia de la aritmética elemental, que trata de los números y las operaciones fundamentales, en álgebra -para lograr la generalización- se introducen además símbolos (usualmente letras) para representar parámetros (variables o coeficientes), o cantidades desconocidas (incógnitas); las expresiones así formadas son llamadas «fórmulas algebraicas», y expresan una regla o un principio general.​ El álgebra conforma una de las grandes áreas de las matemáticas, junto a la teoría de números, la geometría y el análisis. La palabra «álgebra» proviene del vocablo árabe dialectal por asimilación progresiva se pronunciaba [alŷɛbɾ] de donde derivan los términos de las lenguas europeas), que se traduce como 'restauración' o 'reponimiento, reintegración'. Deriva del tratado escrito alrededor del año 820 d. C. por el matemático y astrónomo persa Muhammad ibn Musa al-Jwarizmi (conocido como Al Juarismi), titulado Al-kitāb al-mukhtaṣar fī ḥisāb al-ŷarabi waˀl-muqābala (Compendio de cálculo por reintegración y comparación).", Autor = "A. Baldor", IdIdioma = 1, IdUsuario = 17, IdMateria = 2, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP14 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Análisis Matemático", Descripcion = "Las raíces del álgebra pueden rastrearse hasta la antigua matemática babilónica", Prologo = "Los matemáticos de la Antigua Grecia introdujeron una importante transformación al crear un álgebra de tipo geométrico, en donde los «términos» eran representados mediante los «lados de objetos geométricos», usualmente líneas a las cuales asociaban letras.6​ Los matemáticos helénicos Herón de Alejandría y Diofanto8​ así como también los matemáticos indios como Brahmagupta, siguieron las tradiciones de Egipto y Babilonia, si bien la Arithmetica de Diofanto y el Brahmasphutasiddhanta de Brahmagupta se hallan a un nivel de desarrollo mucho más alto.9​ Por ejemplo, la primera solución aritmética completa (incluyendo al cero y soluciones negativas) para las ecuaciones cuadráticas fue descrita por Brahmagupta en su libro.", Autor = "T. M. Apostol", IdIdioma = 1, IdUsuario = 17, IdMateria = 2, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP15 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Organización de computadoras", Descripcion = "", Prologo = "La organización de una computadora y su arquitectura están estrechamente relacionadas; sin embargo, no se deben confundir la arquitectura con la organización, que en algunos casos suele ser usada como un sinónimo de esta última, puesto que la arquitectura se enfoca a la forma de construir las unidades funcionales para que realicen las funciones especificadas por su organización, al igual que su forma de comunicarse e interactuar entre ellas. Un ejemplo de atributos de la arquitectura computacional son el número de bits usados para representar los tipos de datos (números, caracteres, etc.), mecanismos de entrada/salida, entre otros. Algunos de los atributos de la organización son las interfaces entre la computadora y los periféricos, las señales de control en el hardware y la tecnología de la memoria usada.", Autor = "Andres S. Tanebaum", IdIdioma = 1, IdUsuario = 16, IdMateria = 3, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP16 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Epistemología para principiantes", Descripcion = "", Prologo = "La epistemología estudia las circunstancias históricas, psicológicas y sociológicas que llevan a la obtención del conocimiento científico y los criterios por los cuales se lo justifica o invalida, así como la definición clara y precisa de los conceptos epistémicos más usuales, tales como verdad, objetividad, realidad o justificación. Algunas de las preguntas que pretende responder la epistemología son ¿Cómo conocemos?, ¿Cuáles son las fuentes del conocimiento?, ¿Cómo diferenciamos lo verdadero de lo falso? y ¿Cuáles son los tipos de conocimiento?. El debate no se centra en un cocimiento específico, sino en la forma en como conocemos. Algunos autores distinguen a la epistemología, estudio del conocimiento científico, de la gnoseología, estudio del conocimiento en general. ", Autor = "Denise Najmanovich", IdIdioma = 1, IdUsuario = 17, IdMateria = 4, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP17 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Fundamentos de enfermería", Descripcion = "", Prologo = "La enfermería (del latín in-, «negación»; firmus, firma, firmum, «firme, resistente, fuerte»; y -eria, «actividad, establecimiento» o «actividad, establecimiento [relacionado] con los no firmes, no fuertes [enfermos]») es la ciencia que se dedica al cuidado y atención de enfermos y heridos, así como a otras tareas de asistencia sanitarias, clínicas y a la promoción y prevención de la salud.1​ La enfermería forma parte de las conocidas como ciencias de la salud, trabajando de forma autónoma e independiente, y a su vez, formando parte de un equipo multidisciplinar. La enfermería abarca la atención autónoma y en colaboración dispensada a personas de todas las edades, familias, grupos y comunidades, enfermos o no, y en todas circunstancias. Comprende la promoción de la salud, la prevención de enfermedades y la atención dispensada a enfermos, discapacitados y personas en situación terminal. ", Autor = "Potter Perry", IdIdioma = 1, IdUsuario = 18, IdMateria = 7, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP18 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Anatomía Humana", Descripcion = "", Prologo = "La enfermería (del latín in-, «negación»; firmus, firma, firmum, «firme, resistente, fuerte»; y -eria, «actividad, establecimiento» o «actividad, establecimiento [relacionado] con los no firmes, no fuertes [enfermos]») es la ciencia que se dedica al cuidado y atención de enfermos y heridos, así como a otras tareas de asistencia sanitarias, clínicas y a la promoción y prevención de la salud.1​ La enfermería forma parte de las conocidas como ciencias de la salud, trabajando de forma autónoma e independiente, y a su vez, formando parte de un equipo multidisciplinar. La enfermería abarca la atención autónoma y en colaboración dispensada a personas de todas las edades, familias, grupos y comunidades, enfermos o no, y en todas circunstancias. Comprende la promoción de la salud, la prevención de enfermedades y la atención dispensada a enfermos, discapacitados y personas en situación terminal. ", Autor = "Ruiz Liard", IdIdioma = 1, IdUsuario = 18, IdMateria = 7, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP19 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Curso de programación C#", Descripcion = "", Prologo = "La programación es el proceso utilizado para idear y ordenar las acciones necesarias para realizar un proyecto, preparar ciertas máquinas o aparatos para que empiecen a funcionar en el momento y en la forma deseados o elaborar programas para su empleo en computadoras. En la actualidad, la noción de programación se encuentra muy asociada a la creación de aplicaciones de informática y videojuegos. En este sentido, es el proceso por el cual una persona desarrolla un programa, valiéndose de una herramienta que le permita escribir el código (el cual puede estar en uno o varios lenguajes, como C++, Java y Python, entre otros) y de otra que sea capaz de “traducirlo” a lo que se conoce como lenguaje de máquina, que puede comprender el microprocesador.", Autor = "Users", IdIdioma = 1, IdUsuario = 16, IdMateria = 1, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP21 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Medical Pharmacology", Descripcion = "", Prologo = "Pharmacology is a branch of medicine and pharmaceutical sciences concerned with drug or medication action,[1] where a drug may be defined as any artificial, natural, or endogenous (from within the body) molecule which exerts a biochemical or physiological effect on the cell, tissue, organ, or organism (sometimes the word pharmacon is used as a term to encompass these endogenous and exogenous bioactive species). More specifically, it is the study of the interactions that occur between a living organism and chemicals that affect normal or abnormal biochemical function. If substances have medicinal properties, they are considered pharmaceuticals. The field encompasses drug composition and properties, synthesis and drug design, molecular and cellular mechanisms, organ/systems mechanisms, signal transduction/cellular communication, molecular diagnostics, interactions, chemical biology, therapy, and medical applications and antipathogenic capabilities. ", Autor = "Michael Neal", IdIdioma = 2, IdUsuario = 18, IdMateria = 8, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP20 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "C++ Programación orientada a objetos", Descripcion = "", Prologo = "La programación es el proceso utilizado para idear y ordenar las acciones necesarias para realizar un proyecto, preparar ciertas máquinas o aparatos para que empiecen a funcionar en el momento y en la forma deseados o elaborar programas para su empleo en computadoras. En la actualidad, la noción de programación se encuentra muy asociada a la creación de aplicaciones de informática y videojuegos. En este sentido, es el proceso por el cual una persona desarrolla un programa, valiéndose de una herramienta que le permita escribir el código (el cual puede estar en uno o varios lenguajes, como C++, Java y Python, entre otros) y de otra que sea capaz de “traducirlo” a lo que se conoce como lenguaje de máquina, que puede comprender el microprocesador. Para crear un programa, y que la computadora lo interprete y ejecute, las instrucciones deben escribirse en un lenguaje de programación. ", Autor = "Users", IdIdioma = 1, IdUsuario = 16, IdMateria = 1, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP22 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Redes, dispositivos e instalación", Descripcion = "", Prologo = "Una red de computadoras (también llamada red de ordenadores o red informática) es un conjunto de equipos nodos y software conectados entre sí por medio de dispositivos físicos o inalámbricos que envían y reciben impulsos eléctricos, ondas electromagnéticas o cualquier otro medio para el transporte de datos, con la finalidad de compartir información, recursos y ofrecer servicios. Como en todo proceso de comunicación, se requiere de un emisor, un mensaje, un medio y un receptor. La finalidad principal para la creación de una red de ordenadores es compartir los recursos y la información en la distancia, asegurar la confiabilidad y la disponibilidad de la información, aumentar la velocidad de transmisión de los datos y reducir el costo. Un ejemplo es Internet, el cual es una gran red de millones de ordenadores ubicados en distintos puntos del planeta interconectados básicamente para compartir información y recursos.", Autor = "Users", IdIdioma = 1, IdUsuario = 17, IdMateria = 3, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP23 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Pyhton for beginners", Descripcion = "", Prologo = "Computer programming is the process of designing and building an executable computer program to accomplish a specific computing result or to perform a specific task. Programming involves tasks such as: analysis, generating algorithms, profiling algorithms' accuracy and resource consumption, and the implementation of algorithms in a chosen programming language (commonly referred to as coding).[1][2] The source code of a program is written in one or more languages that are intelligible to programmers, rather than machine code, which is directly executed by the central processing unit. The purpose of programming is to find a sequence of instructions that will automate the performance of a task (which can be as complex as an operating system) on a computer, often for solving a given problem. Proficient programming thus often requires expertise in several different subjects, including knowledge of the application domain, specialized algorithms, and formal logic. ", Autor = "Marc Matthes", IdIdioma = 2, IdUsuario = 16, IdMateria = 1, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP24 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio {TipoArchivo = "PDF",  Titulo = "Computer programming for begginers", Descripcion = "", Prologo = "Computer programming is the process of designing and building an executable computer program to accomplish a specific computing result or to perform a specific task. Programming involves tasks such as: analysis, generating algorithms, profiling algorithms' accuracy and resource consumption, and the implementation of algorithms in a chosen programming language (commonly referred to as coding).[1][2] The source code of a program is written in one or more languages that are intelligible to programmers, rather than machine code, which is directly executed by the central processing unit. The purpose of programming is to find a sequence of instructions that will automate the performance of a task (which can be as complex as an operating system) on a computer, often for solving a given problem. Proficient programming thus often requires expertise in several different subjects, including knowledge of the application domain, specialized algorithms, and formal logic. ", Autor = "Kevin Cooper", IdIdioma = 2, IdUsuario = 16, IdMateria = 1, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP25 });
                                                                    
                c.MaterialEstudio.Add(new Entities.MaterialEstudio { TipoArchivo = "PDF", Titulo = "Fundamentos de sistemas operativos", Descripcion = "", Prologo = "Un sistema operativo (SO o, frecuentemente, OS —del inglés operating system—) es el software principal o conjunto de programas de un sistema informático que gestiona los recursos de hardware y provee servicios a los programas de aplicación de software, ejecutándose en modo privilegiado respecto de los restantes. Uno de los propósitos del sistema operativo que gestiona el núcleo intermediario consiste en gestionar los recursos de localización y protección de acceso del hardware, hecho que alivia a los programadores de aplicaciones de tener que tratar con estos detalles. La mayoría de aparatos electrónicos que utilizan microprocesadores para funcionar, llevan incorporado un sistema operativo (teléfonos móviles, reproductores de DVD, computadoras, enrutadores, etc.). En cuyo caso, son manejados mediante una interfaz gráfica de usuario, un gestor de ventanas o un entorno de escritorio, si es un celular, mediante una consola o control remoto si es un DVD y, mediante una línea de comandos o navegador web si es un enrutador. ", Autor = "Kevin Cooper", IdIdioma = 1, IdUsuario = 16, IdMateria = 3, IdUniversidad = 1, Archivo = bytes, Miniatura = bytesP26 });

                c.SaveChanges();
                
            }

        }
    }
}
